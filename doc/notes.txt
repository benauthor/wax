    (1) element name
    (2) attributes -- a mapping
    (3) text -- a string
    (4) children -- a sequence of elements


{
  '.': 'class',
  '#': 'id'
}
doctypes get s


!xhtml4 //common doctypes should get sugar
!html5
! //for 5?
html // element name is the first thing
  body //children indicated by indent
    h1 //element
      |class heading //attributes indicated by pipe
      |id main
      : Hello, world! //text indicated by colon


    h1.heading#main //shorthand for common attributes. specify this mapping somewhere
      : Hello, world!

    h1|class heading|id main|tal:define numero "uno" //why not let's inline any attributes.

    h1.heading#main: Hello, world! //why not let's inline text, if it's short.

    table#puppy_table
      tr.puppy|tal:repeat puppy puppies
        td.puppyname|tal:content puppy.name
        td.puppyweight|tal:content puppy.weight

    <table id="puppy_table">
      <tr class="puppy" tal:repeat="puppy puppies">
        <td class="puppyname" tal:content="puppy.name"/>
        <td class="puppyweight" tal:content="puppy.weight"/>
      </tr>
    </table>


 <div i18n:translate="">
     You have <span i18n:name="amount">${round(amount, 2)}</span> dollars in your account.
  </div>

  div|i18n:translate
        : You have
        span|i18n:name amount
            :${round(amount, 2)}
        : dollars in your account.

  div|i18n:translate
        : You have @@span|i18n:name amount: ${round(amount, 2)}@@ dollars in your account. // some kind of shorthand for inline elements too?